name: Generate Documentation Screenshots

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch: # Allow manual triggering
    inputs:
      app_url:
        description: 'URL of the running app to screenshot'
        required: false
        default: 'https://volunteer-portal-nine.vercel.app'
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  screenshots:
    name: Generate Screenshots
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: docs

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: volunteer-portal
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: docs/package-lock.json

      - name: Install docs dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Setup web app for screenshots
        working-directory: web
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/volunteer-portal
          NEXTAUTH_SECRET: screenshot-secret
          NEXTAUTH_URL: http://localhost:3000
        run: |
          npm ci
          cp .env.example .env.local
          echo "NEXTAUTH_SECRET=screenshot-secret" >> .env.local
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local
          npx prisma migrate deploy
          npx prisma db seed

      - name: Start web app
        working-directory: web
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/volunteer-portal
          NEXTAUTH_SECRET: screenshot-secret
          NEXTAUTH_URL: http://localhost:3000
        run: |
          npm run build
          npm run start &
          sleep 30

      - name: Generate screenshots
        env:
          DOCS_SCREENSHOT_URL: ${{ github.event.inputs.app_url || 'http://localhost:3000' }}
          ADMIN_EMAIL: admin@test.com
          ADMIN_PASSWORD: password123
        run: npm run screenshots

      - name: Commit screenshot updates
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add src/assets/images/screenshots/
            git commit -m "docs: update documentation screenshots [skip ci]
            
            ðŸ¤– Generated with automated screenshot workflow"
            git push
          else
            echo "No screenshot changes to commit"
          fi