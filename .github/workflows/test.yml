name: Test
permissions:
  contents: read

on:
  push:
    branches: [main]
    paths: ["web/**", ".github/workflows/test.yml"]
  pull_request:
    branches: [main]
    paths: ["web/**", ".github/workflows/test.yml"]

jobs:
  test:
    name: Playwright Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard:
          [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
          ]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: volunteer-portal
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Get Playwright version
        run: |
          cd web
          echo "PLAYWRIGHT_VERSION=$(npx playwright --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)" >> $GITHUB_ENV

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        run: |
          cd web
          npx playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/volunteer-portal
          DIRECT_URL: postgresql://postgres:password@localhost:5432/volunteer-portal
          TZ: Pacific/Auckland
        run: |
          cd web
          cp .env.example .env
          echo "NEXTAUTH_SECRET=test-secret-for-ci" >> .env.local
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local
          npx prisma migrate deploy
          npx prisma db seed

      - name: Run Playwright tests
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/volunteer-portal
          DIRECT_URL: postgresql://postgres:password@localhost:5432/volunteer-portal
          NEXTAUTH_SECRET: test-secret-for-ci
          NEXTAUTH_URL: http://localhost:3000
          TZ: Pacific/Auckland
        run: |
          cd web
          npx playwright test --shard=${{ matrix.shard }}/${{ strategy.job-total }} --project=chromium --reporter=blob

      - name: Upload blob report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: blob-report-${{ matrix.shard }}
          path: web/blob-report/
          retention-days: 1

  merge-reports:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Download all blob reports
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge test reports
        run: |
          cd web
          npx playwright merge-reports --reporter=html ../all-blob-reports

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-merged
          path: web/playwright-report/
          retention-days: 30

  tests-passed:
    if: always()
    needs: [test, merge-reports]
    runs-on: ubuntu-latest
    name: Tests passed
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.test.result }}" == "failure" || "${{ needs.merge-reports.result }}" == "failure" ]]; then
            echo "‚ùå Tests failed"
            exit 1
          elif [[ "${{ needs.test.result }}" == "cancelled" || "${{ needs.merge-reports.result }}" == "cancelled" ]]; then
            echo "üü° Tests cancelled"
            exit 1
          else
            echo "‚úÖ All tests passed"
          fi
